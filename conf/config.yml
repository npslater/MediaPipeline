pipeline_name:
  local:
    archive_dir: /tmp/mediapipeline/archive           #The directory that will store the local RAR archive before uploading
    download_dir: /tmp/mediapipeline/download         #The directory on the EC2 worker instance that will be used to download the audio files from S3
    cover_art_dir: /tmp/mediapipeline/cover_art       #The directory that will be used both locally and on the EC2 instance to store the album art images
    rar_path: /usr/bin/rar                            #The path to the RAR binary
  aws:
    region: aws-region                                #The AWS region to deploy the mediapipeline stack into
  autoscale:
    transcode_queue_length: 2
  s3:
    bucket: s3_bucket_name                           #The name of the S3 bucket that will be used to store all the media assets and archives
    archive_prefix: archive/
    transcode_input_prefix: input/
    transcode_output_prefix: output/
    cover_art_prefix: cover_art/
    tagged_output_prefix: tagged/
    concurrent_connections: 2                       #The number of concurrent connections to S3 when uploading from local to AWS.
  db:
    file_table: media_file_table_name               #The name of the DynamoDB table that will track the audio files
    archive_table: media_archive_table_name         #The name of the DynamoDB table that will track the archive files
    stats_table: media_processing_stats_table_name  #The name of the DynamoDB table that stores status about each file that has been processed by the pipeline.
  sqs:
    transcode_queue: transcode_queue_name           #The SQS queue name for the files that are ready to submitted to ElasticTranscoder
    id3tag_queue: id3tag_queue_name                 #The SQS queue name for the transcoded files that are ready to be tagged
  transcoder:
    preset_id: 1351620000001-300010                 #The transcoder preset.  Do not change.
    output_file_ext: mp3                            #The file extension of the transcoded files.  Do not change.
  sns:
    transcode_topic: transcoder_topic               #The SNS topic that ElasticTranscoder will use publish transcoding events
  schedule:
    hours_in_day: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]  #The hours in the day that the local archive/upload command should run.
                                                                                   #This is useful if running the routines through cron and at certain times of
                                                                                   #day the upload is not desirable (because the bandwidth needs to be used for other work)