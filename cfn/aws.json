{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Creates the AWS resources required by the MediaPipeline",

    "Parameters": {
        "S3BucketName": {
            "Type": "String"
        },
        "S3ArchivePrefix": {
            "Type": "String"
        },
        "S3InputPrefix": {
            "Type": "String"
        },
        "S3OutputPrefix": {
            "Type": "String"
        },
        "S3CoverArtPrefix": {
            "Type":"String"
        },
        "DDBFileTable": {
            "Type": "String"
        },
        "DDBArchiveTable": {
            "Type": "String"
        },
        "TranscodeQueueName": {
            "Type": "String"
        },
        "ID3TagQueueName": {
            "Type": "String"
        },
        "CloudPlayerUploadQueueName": {
            "Type": "String"
        },
        "TranscodeTopicName": {
            "Type": "String"
        }
    },
    "Mappings": {

    },
    "Resources": {
        "S3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": {
                    "Ref": "S3BucketName"
                },
                "LifecycleConfiguration": {
                    "Rules": [
                        {
                            "Id": "RAR archive lifecycle",
                            "Prefix": "archive/",
                            "Status": "Enabled",
                            "Transition": {
                                "StorageClass": "Glacier",
                                "TransitionInDays": "30"
                            }
                        }
                    ]
                }
            }
        },
        "MediaFileTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": {
                    "Ref": "DDBFileTable"
                },
                "AttributeDefinitions": [
                    {
                        "AttributeName": "local_file_path",
                        "AttributeType": "S"
                    },
                    {
                        "AttributeName": "local_dir",
                        "AttributeType": "S"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": "10",
                    "WriteCapacityUnits": "10"
                },
                "KeySchema": [
                    {
                        "AttributeName": "local_file_path",
                        "KeyType": "HASH"
                    },
                    {
                        "AttributeName": "local_dir",
                        "KeyType": "RANGE"
                    }
                ]
            }
        },
        "MediaArchiveTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": {
                    "Ref": "DDBArchiveTable"
                },
                "AttributeDefinitions": [
                    {
                        "AttributeName": "local_dir",
                        "AttributeType": "S"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": "5",
                    "WriteCapacityUnits": "5"
                },
                "KeySchema": [
                    {
                        "AttributeName": "local_dir",
                        "KeyType": "HASH"
                    }
                ]
            }
        },
        "TranscodeQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
                "QueueName": {
                    "Ref": "TranscodeQueueName"
                }
            }
        },
        "ID3TagQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
                "QueueName": {
                    "Ref": "ID3TagQueueName"
                }
            }
        },
        "CloudPlayerUploadQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
                "QueueName": {
                    "Ref": "CloudPlayerUploadQueueName"
                }
            }
        },
        "TranscodeTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
                "TopicName": {"Ref": "TranscodeTopicName"}
            }

        },
        "TranscoderRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [ "elastictranscoder.amazonaws.com" ]
                            },
                            "Action": [ "sts:AssumeRole" ]
                        }
                    ]
                },
                "Path": "/mediapipeline/",
                "Policies": [
                    {
                        "PolicyName": "transcoder",
                        "PolicyDocument": {
                            "Version": "2008-10-17",
                            "Statement": [
                                {"Sid":"1","Effect":"Allow","Action":["s3:ListBucket","s3:Put*","s3:Get*","s3:*MultipartUpload*"],"Resource":{"Fn::Join": ["", ["arn:aws:s3:::", {"Ref": "S3Bucket"},"*"]]}},
                                {"Sid":"2","Effect":"Allow","Action":"sns:Publish","Resource":{"Ref": "TranscodeTopic"}},
                                {"Sid":"3","Effect":"Deny","Action":["s3:*Policy*","sns:*Permission*","sns:*Delete*","s3:*Delete*","sns:*Remove*"],"Resource":"*"}
                            ]
                        }
                    }
                ]
            }
        }
    },
    "Outputs": {
        "TranscodeInputBucket": {
            "Value": {"Ref": "S3Bucket"}
        },
        "TranscodeOutputBucket": {
            "Value": {"Ref": "S3Bucket"}
        },
        "TranscodeSNSTopic": {
            "Value": {"Ref": "TranscodeTopic"}
        },
        "TranscoderRole": {
            "Value": {"Fn::GetAtt" : ["TranscoderRole", "Arn"] }
        }
    }
}